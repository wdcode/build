<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.weicoder</groupId>
	<artifactId>build</artifactId>
	<version>1.8</version>
	<packaging>pom</packaging>
	<name>wdcode</name>
	<description>java tools</description>
	<url>https://github.com/wdcode</url>

	<properties>
		<encoding>UTF-8</encoding>
		<jetty.port>8080</jetty.port>
		<jdk>11</jdk>
		<project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
		<javaee-api>8.0.1</javaee-api> 
		<jetty-maven-plugin>9.4.31.v20200723</jetty-maven-plugin>
		<lombok>1.18.12</lombok>
		<smart-doc-maven-plugin>1.1.4</smart-doc-maven-plugin>  
		<maven-compiler-plugin>3.8.1</maven-compiler-plugin>
		<maven-source-plugin>3.2.1</maven-source-plugin>
		<maven-javadoc-plugin>3.2.0</maven-javadoc-plugin>
		<maven-gpg-plugin>1.6</maven-gpg-plugin>
		<maven-resources-plugin>3.2.0</maven-resources-plugin>
		<maven-assembly-plugin>3.3.0</maven-assembly-plugin>
		<maven-shade-plugin>3.2.4</maven-shade-plugin>
		<maven-jar-plugin>3.2.0</maven-jar-plugin>
		<maven-war-plugin>3.3.1</maven-war-plugin>
		<maven-dependency-plugin>3.1.2</maven-dependency-plugin>
		<maven-surefire-plugin>2.22.2</maven-surefire-plugin>
		<maven-clean-plugin>3.1.0</maven-clean-plugin>
		<maven-install-plugin>2.5.2</maven-install-plugin>
		<versions-maven-plugin>2.8.1</versions-maven-plugin>
		<nexus-staging-maven-plugin>1.6.8</nexus-staging-maven-plugin> 
	</properties>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>wdcode</name>
			<email>wdcode@qq.com</email>
		</developer>
	</developers>

	<scm>
		<connection>scm:git@github.com:wdcode/</connection>
		<developerConnection>scm:git@github.com:wdcode</developerConnection>
		<url>git@github.com:wdcode</url>
	</scm>

	<repositories>
		<repository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>https://maven.aliyun.com/repository/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>maven</id>
			<name>maven nexus</name>
			<url>https://repo1.maven.org/maven2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>https://maven.aliyun.com/repository/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>maven</id>
			<name>maven nexus</name>
			<url>https://repo1.maven.org/maven2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty-maven-plugin}</version>
				<configuration>
					<scanIntervalSeconds>1</scanIntervalSeconds>
					<httpConnector>
						<port>${jetty.port}</port>
					</httpConnector>
					<webAppConfig>
						<contextPath>/</contextPath>
					</webAppConfig>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin}</version>
				<configuration>
					<compilerArgument>-parameters</compilerArgument>
					<source>${jdk}</source>
					<target>${jdk}</target>
					<encoding>${encoding}</encoding>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin}</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<!-- 覆盖原有文件 -->
							<overwrite>true</overwrite>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<!-- 待处理的资源定义 -->
							<resources>
								<resource>
									<directory>src/main/java</directory>
									<filtering>true</filtering>
									<excludes>
										<exclude>**/*.java</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${versions-maven-plugin}</version>
				<configuration>
					<generateBackupPoms>false</generateBackupPoms>
					<processAllModules>true</processAllModules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin}</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven-clean-plugin}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>${maven-install-plugin}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven-war-plugin}</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.shalousun</groupId>
				<artifactId>smart-doc-maven-plugin</artifactId>
				<version>${smart-doc-maven-plugin}</version>
				<configuration>
					<!--指定生成文档的使用的配置文件,配置文件放在自己的项目中 -->
					<configFile>./smart-doc.json</configFile> 
				</configuration>
				<executions>
					<execution>
						<!--如果不需要在执行编译时启动smart-doc，则将phase注释掉 <phase>compile</phase> -->
						<goals>
							<goal>html</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins> 
	</build>

	<profiles>
		<profile>
			<id>jdk8</id>
			<properties>
				<jdk>1.8</jdk>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId> 
						<version>${maven-compiler-plugin}</version>
						<configuration>
							<compilerArgument>-parameters</compilerArgument>
							<source>${jdk}</source>
							<target>${jdk}</target>
							<encoding>${encoding}</encoding>
							<skip>true</skip>
							<excludes> 
								<exclude>**/*Jdk11*.java</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>${maven-jar-plugin}</version>
						<configuration>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<classpathPrefix>lib/</classpathPrefix>
									<mainClass>com.weicoder.common.Main</mainClass>
								</manifest>
							</archive>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>${maven-dependency-plugin}</version> <!--$NO-MVN-MAN-VER$-->
						<executions>
							<execution>
								<id>copy</id>
								<phase>compile</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/lib</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build> 
		</profile> 
		<profile>
			<id>assembly</id>
			<build>
				<plugins>
					<plugin>  
						<groupId>org.apache.maven.plugins</groupId>  
						<artifactId>maven-assembly-plugin</artifactId>  
						<version>${maven-assembly-plugin}</version>  
						<configuration>  
							<archive>  
								<manifest>  
									<mainClass>com.weicoder.common.Main</mainClass>  
								</manifest>  
							</archive>  
							<descriptorRefs>  
								<descriptorRef>jar-with-dependencies</descriptorRef>  
							</descriptorRefs>  
						</configuration>  
						<executions>  
							<execution>  
								<id>make-assembly</id>  
								<phase>package</phase>  
								<goals>  
									<goal>single</goal>  
								</goals>  
							</execution> 
						</executions>  
					</plugin>  
				</plugins>
			</build> 
		</profile>
		<profile>
			<id>release</id>
			<distributionManagement>
				<snapshotRepository>
					<id>oss</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
				</snapshotRepository>
				<repository>
					<id>oss</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc-plugin}</version>
						<configuration>
							<failOnError>false</failOnError>
							<doclint>none</doclint>
						</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>${nexus-staging-maven-plugin}</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>oss</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven-gpg-plugin}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>weicoder</id>
			<distributionManagement>
				 <repository>
					<id>weicoder</id> 
					<url>http://maven.weicoder.com/nexus/content/repositories/releases/</url>
				</repository>
				<snapshotRepository>
					<id>weicoder</id> 
					<url>http://maven.weicoder.com/nexus/content/repositories/snapshots/</url>
				</snapshotRepository> 
			</distributionManagement> 
		</profile>
		<profile>
			<id>tomcat</id>
			<dependencies>
				<dependency>
					<groupId>com.weicoder</groupId>
					<artifactId>tomcat</artifactId>
				</dependency> 
			</dependencies>
			<build>
				<plugins>
					 <plugin>  
						<groupId>org.apache.maven.plugins</groupId>  
						<artifactId>maven-shade-plugin</artifactId>  
						<version>${maven-shade-plugin}</version>  
						<executions>  
							<execution>  
								<phase>package</phase>  
								<goals>  
									<goal>shade</goal>  
								</goals>  
								<configuration>  
									<transformers>  
										<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">  
											<mainClass>com.weicoder.tomcat.Main</mainClass>  
										</transformer>  
										 <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">  
											<resource>**/*</resource>  
										</transformer> 
									</transformers>  
								</configuration>  
							</execution>  
						</executions>  
					</plugin>     
				</plugins> 
			</build> 
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>${javaee-api}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok}</version>
			<optional>true</optional>
		</dependency>
	</dependencies>
</project>